// Generated by CoffeeScript 1.6.2
(function() {
  describe("AppView", function() {
    var app, appView, dealerHand, playerHand;

    appView = null;
    app = null;
    playerHand = null;
    dealerHand = null;
    beforeEach(function() {
      app = new App();
      appView = new AppView({
        model: app
      });
      playerHand = app.get('playerHand');
      return dealerHand = app.get('dealerHand');
    });
    return describe("and App - ", function() {
      it("after a game finishes the players are delt new deck", function() {
        app.redeal();
        spyOn(appView, 'render');
        expect(app.get('deck').length).toEqual(48);
        expect(app.get('playerHand').length).toEqual(2);
        app.redeal();
        expect(app.get('deck').length).toEqual(48);
        return expect(app.get('playerHand').length).toEqual(2);
      });
      it("player hits he gets a card", function() {
        expect(app.get('deck').length).toEqual(48);
        playerHand = app.get('playerHand');
        expect(playerHand.length).toEqual(2);
        spyOn(playerHand, 'scores').andReturn(15);
        playerHand.hit();
        expect(app.get('playerHand').length).toEqual(3);
        return expect(app.get('deck').length).toEqual(47);
      });
      it("dealer should hit after player has 19 and dealer has 18", function() {
        spyOn(playerHand, 'scores').andReturn(19);
        spyOn(dealerHand, 'scores').andReturn(18);
        spyOn(dealerHand, 'hit');
        playerHand.stand();
        return expect(dealerHand.hit).toHaveBeenCalled();
      });
      it("dealer should win when player has 21 and dealer has 21", function() {
        spyOn(playerHand, 'scores').andReturn(21);
        spyOn(dealerHand, 'scores').andReturn(21);
        playerHand.stand();
        expect(app.get('dealerWins')).toEqual(1);
        return expect(app.get('playerWins')).toEqual(0);
      });
      return it("dealer should win when player has 23 and dealer has 22", function() {
        spyOn(playerHand, 'scores').andReturn(23);
        spyOn(dealerHand, 'scores').andReturn(22);
        playerHand.stand();
        expect(app.get('dealerWins')).toEqual(1);
        return expect(app.get('playerWins')).toEqual(0);
      });
    });
  });

}).call(this);
